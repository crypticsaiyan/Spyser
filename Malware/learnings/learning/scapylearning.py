from scapy.all import *

# List of websites to monitor
websites = ["example.com", "google.com", "yahoo.com", "facebook.com"]

# Dictionary to keep track of which websites are open
site_status = {site: False for site in websites}


# Function to trigger when the site is opened
def site_opened(site):
    print(f"[{time.ctime()}] {site} is opened! Triggering action...")


# Function to trigger when the site is closed
def site_closed(site):
    print(f"[{time.ctime()}] {site} is closed! Stopping action...")


# Function to handle DNS packet sniffing
def packet_callback(pkt):
    global site_status

    # Check if the packet is a DNS response (query/answer)
    if pkt.haslayer(DNS):
        # Handle DNS Response (qr == 1 means it's a response)
        if pkt[DNS].qr == 1:
            for site in websites:
                try:
                    # Check if the DNS response is for one of the websites
                    if site in pkt[DNS].an.rdata.decode('utf-8', errors='ignore'):
                        if not site_status[site]:
                            site_status[site] = True
                            site_opened(site)  # Trigger when the site is accessed
                except Exception as e:
                    continue

        # Handle DNS Request (qr == 0 means it's a request)
        elif pkt[DNS].qr == 0:
            for site in websites:
                try:
                    if site in pkt[DNS].qd.qname.decode('utf-8', errors='ignore'):
                        if not site_status[site]:
                            site_status[site] = True
                            site_opened(site)  # Trigger when the site is accessed
                except Exception as e:
                    continue


# Start sniffing for DNS queries and responses in real-time
print("Monitoring DNS traffic in real time...")
sniff(prn=packet_callback, filter="udp port 53", store=0)
